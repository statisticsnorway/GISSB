devtools::check()
# Lag pakke
devtools::build()
# Lager vignette
# usethis::use_vignette("GISSB_vignette")
usethis::use_pkgdown() # OBS: docs legges i .gitignore (må fjernes)
pkgdown::build_site()
install.packages("C:/Users/rdn/Documents/Github/GISSB_0.1.0.tar.gz", repos = NULL, type="source")
install.packages("C:/Users/rdn/Documents/Github/GISSB_0.1.0.tar.gz", repos = NULL, type="source")
# Lager vignette
# usethis::use_vignette("GISSB_vignette")
usethis::use_pkgdown() # OBS: docs legges i .gitignore (må fjernes)
pkgdown::build_site()
# OBS: mangler dokumentasjon!
?GISSB::path_leaflet
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
# Lager vignette
# usethis::use_vignette("GISSB_vignette")
usethis::use_pkgdown() # OBS: docs legges i .gitignore (må fjernes)
pkgdown::build_site()
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
# Lager vignette
# usethis::use_vignette("GISSB_vignette")
usethis::use_pkgdown() # OBS: docs legges i .gitignore (må fjernes)
pkgdown::build_site()
devtools::load_all()
address_to_coords(zip_code = "0177", address = "Akersveien 26") %>%
coords_to_google()
# usethis::use_package("sf", type = "imports")
# usethis::use_package("igraph", type = "imports")
# usethis::use_package("tidygraph", type = "imports")
# usethis::use_package("cppRouting", type = "imports")
# usethis::use_package("nabor", type = "imports")
# usethis::use_package("reshape2", type = "imports")
# usethis::use_package("purrr", type = "imports")
# usethis::use_package("tibble", type = "imports")
# usethis::use_package("leaflet", type = "imports")
# usethis::use_package("RCurl", type = "imports")
usethis::use_package("stringr", type = "imports")
library(stringr)
address_to_coords(zip_code = "0177", address = "Akersveien 26") %>%
coords_to_google()
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
source("C:/Users/rdn/Documents/Kart/GiSSB/R/adresse_api_koord.R", encoding = "UTF-8")
source("C:/Users/rdn/Documents/Github/GISSB/R/address_to_coords", encoding = "UTF-8")
source("C:/Users/rdn/Documents/Github/GISSB/R/address_to_coords.R", encoding = "UTF-8")
setwd("C:/")
ambu <- readxl::read_excel("C:/Users/rdn/Documents/Kart/Ambu_stasjon_offentlige.xlsx") %>%
filter(!is.na(`F Adresse1`))
library(tidyverse)
source("C:/Users/rdn/Documents/Github/GISSB/R/address_to_coords.R", encoding = "UTF-8")
setwd("C:/")
ambu <- readxl::read_excel("C:/Users/rdn/Documents/Kart/Ambu_stasjon_offentlige.xlsx") %>%
filter(!is.na(`F Adresse1`))
postnummere <- ambu$`F Postnr`
adresser <- ambu$`F Adresse1`
fra <- adresse_api_koord(postnummer = postnummere,
adresse = adresser)
fra <- address_to_coords(postnummer = postnummere,
adresse = adresser)
fra <- address_to_coords(zip_code =  = postnummere,
fra <- address_to_coords(zip_code = postnummere,
address = adresser)
fra <- cbind(fra, ambu)
problemadresser <- fra %>%
filter(is.na(lat))
ikke_problemer <- fra %>%
filter(!is.na(lat))
View(problemadresser)
address_to_coords(zip_code = "6230",
address = "Smedplassen 2A")
address_to_coords(zip_code = "0565",
address = "Trondheimsveien 99")
address_to_coords(zip_code = "6160",
address = "Torvmyrane 11")
address_to_coords(zip_code = "8400",
address = "Strandgata 39")
address_to_coords(zip_code = "8400",
address = "Strandgaten 39")
address_to_coords(zip_code = "8430",
address = "Storgata 52")
address_to_coords(zip_code = "8430",
address = "Storgaten 52")
address_to_coords(zip_code = "8430",
address = "Storgata 52A")
# Function to get lat and lon til supplied address #
address_coord_func <- function(zip_code, address){
resp <- httr::GET(paste0("https://ws.geonorge.no/adresser/v1/sok?",
"postnummer=", zip_code, "&",
"adressetekst=", "'", gsub(" ", "+", address), "'"))
cont_raw <- httr::content(resp)
if (cont_raw$metadata$totaltAntallTreff == 1) {
lat <- cont_raw$adresser[[1]]$representasjonspunkt$lat
lon <- cont_raw$adresser[[1]]$representasjonspunkt$lon
kommunenummer <- cont_raw$adresser[[1]]$kommunenummer
kommunenavn <- cont_raw$adresser[[1]]$kommunenavn
} else {
lat <- NA
lon <- NA
kommunenummer <- NA
kommunenavn <- NA
kommunenavn <- NA
}
address_coord <- data.frame(address, zip_code, lon, lat, kommunenummer, kommunenavn)
return(address_coord_alle <- rbind(address_coord_alle, address_coord))
}
# Vectorize the address_coord_func function #
address_coord_func_vec <- Vectorize(address_coord_func, vectorize.args = c("zip_code", "address"))
# Use the vectorized function to find the coordinates to each address
address_coord_alle <- data.frame()
addresses_coord <- address_coord_func_vec("8430", "Storgata 52A")
addresses_coord
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord[] <- lapply(addresses_coord, unlist)
View(addresses_coord)
addresses_coord <- address_coord_func_vec("8430", "Storgata 52")
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord[] <- lapply(addresses_coord, unlist)
View(addresses_coord)
addresses_coord <- address_coord_func_vec("8430", "Storgata 52")
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = "8430", "Storgata 52")
addresses_coord <- address_coord_func_vec(zip_code = "8430",
address = "Storgata 52")
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = "8430",
address = "Storgata 52A")
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565",
address = c("Storgata 52A", "Trondheimsveien 99"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565"),
address = c("Storgata 52A", "Trondheimsveien 99"))
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565"),
address = c("Storgata 52A", "Trondheimsveien 99"))
addresses_coord
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
View(addresses_coord)
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565"),
address = c("Storgata 52", "Trondheimsveien 99"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat))
addresses_coord_failed
address_failed <- unique(addresses_coord_failed$address)
address_failed
grepl("^[0-9]+$", address_failed)
str_sub(address_failed,-6,-1)
str_sub(address_failed,-2,-1)
str_sub(address_failed,-1,-1)
str_sub(address_failed,-1,-1)
as.numeric(str_sub(address_failed,-1,-1))
as.numeric(str_sub(address_failed,-1,-1)) %in% 1:9
address_failed <- paste0(address_failed, "A")
address_failed
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "1234"),
address = c("Storgata 52", "Trondheimsveien 99", "TEST"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat))
zip_failed <- unique(addresses_coord_failed$zip_code)
address_failed <- unique(addresses_coord_failed$address)
zip_failed
address_failed
if (as.numeric(str_sub(address_failed,-1,-1)) %in% 1:9){
address_failed <- paste0(address_failed, "A")
}
address_failed
str_sub(address_failed,-1,-1)
as.numeric(str_sub(address_failed,-1,-1)
as.numeric(str_sub(address_failed,-1,-1))
as.numeric(str_sub(address_failed,-1,-1))
(as.numeric(str_sub(address_failed,-1,-1)) %in% 1:9)
addresses_coord_failed
as.numeric(str_sub(address_failed,-1,-1)
as.numeric(str_sub(address_failed,-1,-1))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(address_new = case_when(
as.numeric(str_sub(address,-1,-1)) %in% 1:9 ~ paste0(address, "A",
TRUE ~ address)
))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(address_new = case_when(
as.numeric(str_sub(address,-1,-1)) %in% 1:9 ~ paste0(address, "A"),
TRUE ~ address)
)
addresses_coord_failed
as.numeric(str_sub(address,-1,-1)) %in% 1:9
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(address_new = case_when(
as.numeric(str_sub(address,-1,-1)) %in% 1:9 ~ paste0(address, "A"),
TRUE ~ address))
address
as.numeric(str_sub(address,-1,-1))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_new = case_when(
nummer %in% 1:9 ~ "hey",
~ address
))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_new = case_when(
nummer %in% 1:9 ~ "hey",
~ "address"
))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_new = case_when(
nummer %in% c(1:9) ~ "hey",
~ "address"
))
nummer %in% c(1:9)
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_new = case_when(
nummer %in% c(1:9) ~ "hey",
~ "address"
))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_new = case_when(
nummer %in% c(1:9) ~ "hey",
TRUE ~ "address"
))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_new = case_when(
nummer %in% c(1:9) ~ paste0(address, "A"),
TRUE ~ "address"
))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_added_A = case_when(
nummer %in% c(1:9) ~ paste0(address, "A"),
TRUE ~ "address"
))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_added_A = case_when(
nummer %in% c(1:9) ~ paste0(address, "A"),
TRUE ~ "address"
),
address_gata_gaten = gsub("gata", "gaten", adress))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_added_A = case_when(
nummer %in% c(1:9) ~ paste0(address, "A"),
TRUE ~ "address"),
address_gata_gaten = gsub("gata", "gaten", adress))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_added_A = case_when(
nummer %in% c(1:9) ~ paste0(address, "A"),
TRUE ~ ""),
address_gata_gaten = gsub("gata", "gaten", adress))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
# address_added_A = case_when(
#   nummer %in% c(1:9) ~ paste0(address, "A"),
#   TRUE ~ ""),
address_gata_gaten = gsub("gata", "gaten", adress))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
# address_added_A = case_when(
#   nummer %in% c(1:9) ~ paste0(address, "A"),
#   TRUE ~ ""),
address_gata_gaten = gsub("gata", "gaten", address))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
# address_added_A = case_when(
#   nummer %in% c(1:9) ~ paste0(address, "A"),
#   TRUE ~ ""),
address_gata_gaten = gsub("gata", "gaten", ""))
addresses_coord_failed
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
# address_added_A = case_when(
#   nummer %in% c(1:9) ~ paste0(address, "A"),
#   TRUE ~ ""),
address_gata_gaten = gsub("gata", "gaten", address))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
# address_added_A = case_when(
#   nummer %in% c(1:9) ~ paste0(address, "A"),
#   TRUE ~ ""),
address_gata_gaten = gsub("gata", "gaten", address))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_added_A = case_when(
nummer %in% c(1:9) ~ paste0(address, "A"),
TRUE ~ ""),
address_gata_gaten = gsub("gata", "gaten", address))
addresses_coord_failed
zip_failed <- unique(addresses_coord_failed$zip_code)
address_added_A <- unique(addresses_coord_failed$address_added_A)
address_coord_alle <- data.frame()
addresses_coord <- address_coord_func_vec(zip_code = zip_failed,
address = address_added_A)
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "7340"),
address = c("Storgata 52", "Trondheimsveien 99", "Russervegen 5"))
addresses_coord
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "7340"),
address = c("Storgata 52", "Trondheimsveien 99", "Russerveien 5"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "4950"),
address = c("Storgata 52", "Trondheimsveien 99", "Grønningveien 33"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "4950"),
address = c("Storgata 52", "Trondheimsveien 99", "Grønningvegen 33"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "4950"),
address = c("Storgata 52", "Trondheimsveien 99", "Grønningveien 33A"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "3570"),
address = c("Storgata 52", "Trondheimsveien 99", "Helsetunvegen 33"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "3570"),
address = c("Storgata 52", "Trondheimsveien 99", "Helsetunveien 33"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "3570"),
address = c("Storgata 52", "Trondheimsveien 99", "Helsetunvegen 33A"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
View(ikke_problemer)
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "9700"),
address = c("Storgata 52", "Trondheimsveien 99", "Helsetunvegen 2"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "9700"),
address = c("Storgata 52", "Trondheimsveien 99", "Helsetunveien 2"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
addresses_coord
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "0565", "9700"),
address = c("Storgata 52", "Trondheimsveien 99", "Helsetunvegen 2"))
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "9700"),
address = c("Storgata 52", "Helsetunvegen 2"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
# Use the vectorized function to find the coordinates to each address
address_coord_alle <- data.frame()
addresses_coord <- address_coord_func_vec(zip_code = c("8430", "9700"),
address = c("Storgata 52", "Helsetunvegen 2"))
# Convert to data.frame #
addresses_coord <- as.data.frame(t(addresses_coord))
# Legger til A
addresses_coord_failed <- addresses_coord %>%
dplyr::filter(is.na(lat)) %>%
dplyr::mutate(nummer = as.numeric(str_sub(address,-1,-1)),
address_added_A = case_when(
nummer %in% c(1:9) ~ paste0(address, "A"),
TRUE ~ ""),
address_gata_gaten = gsub("gata", "gaten", address),
address_gata_gaten = gsub("gaten", "gata", address),
address_vegen_veien = gsub("vegen", "veien", address),
address_veien_vegen = gsub("veien", "vegen", address))
addresses_coord_failed
options(scipen=999)
aargang <- as.numeric(rstudioapi::showPrompt("Årgang", "Årgang: ", default = 2021))
# Brukernavn og passord for å laste inn filer fra Linux #
options(usr = Sys.info()[["user"]])
options(passwd = rstudioapi::askForPassword("Windows passord:"))
# Lager vignette
# usethis::use_vignette("GISSB_vignette")
usethis::use_pkgdown() # OBS: docs legges i .gitignore (må fjernes)
pkgdown::build_site()
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
# Lager vignette
# usethis::use_vignette("GISSB_vignette")
usethis::use_pkgdown() # OBS: docs legges i .gitignore (må fjernes)
pkgdown::build_site()
address_to_coords(zip_code = "0177", address = "Akersveien 26") %>%
coords_to_google()
address_to_coords
coords_to_google
library(devtools)
library(usethis)
library(roxygen2)
library(testthat)
# rm(list = c("beregne_avstand_cpp"))
devtools::document()
# Lager vignette
# usethis::use_vignette("GISSB_vignette")
usethis::use_pkgdown() # OBS: docs legges i .gitignore (må fjernes)
pkgdown::build_site()
load_all()
address_to_coords(zip_code = "0177", address = "Akersveien 26") \%>\%
address_to_coords(zip_code = "0177", address = "Akersveien 26") \%>\%
685378+21396
685378+21396+(2*3)
address_to_coords(zip_code = "0177", address = "Akersveien 26") %>%
coords_to_google()
testthat::test_that("Testing address_to_coords", {
address_to_coords(zip_code = "0177", address = "Akersveien 26")
})
test_that("Testing coords_to_google", {
from <- address_to_coords(zip_code = "0177",
address = "Akersveien 26") %>%
coords_to_google()
})
coords_to_google_2 <- function(coords,
crs_out = 25833) {
# Forenkler koordinatene for å klippe og lime inn i Google Maps #
coords_4326 <- sf::st_transform(coords, crs = 4326) %>%
dplyr::mutate(coords_google_1 = gsub("^(.*?),.*", "\\1", as.character(geometry)),
coords_google_2 = gsub(".*,", "\\1", as.character(geometry))) %>%
dplyr::mutate(coords_google_1 = gsub("^c\\(|\\)$", "", as.character(coords_google_1)),
coords_google_2 = gsub(").*", "", coords_google_2)) %>%
dplyr::mutate(coords_google_1 = as.numeric(stringr::str_trim(coords_google_1)),
coords_google_2 = as.numeric(stringr::str_trim(coords_google_2))) %>%
dplyr::mutate(coords_google = paste0(coords_google_2, ", ", coords_google_1)) %>%
dplyr::select(-coords_google_1, -coords_google_2) %>%
sf::st_transform(coords, crs = crs_out)
# data.frame()
return(coords_4326)
}
address_to_coords(zip_code = "0177", address = "Akersveien 26") %>%
coords_to_google()
